services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app
    volumes:
      - ./laravel-horizon:/var/www/html
    networks:
      - laravel
    command: >
      sh -c "
      if [ ! -f /var/www/html/.env ]; then
        cp /var/www/html/.env.example /var/www/html/.env;
      fi &&
      php-fpm"
    ports:
      - "9000:9000"

  web:
    image: nginx:alpine
    container_name: laravel_web
    ports:
      - "8080:80"
    volumes:
      - ./laravel-horizon:/var/www/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./fastcgi-php.conf:/etc/nginx/snippets/fastcgi-php.conf
    depends_on:
      - app
    networks:
      - laravel

  horizon:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_horizon
    command: >
      sh -c "
      while true; do
        php artisan horizon;
        sleep 60;
      done"
    volumes:
      - ./laravel-horizon:/var/www/html
    depends_on:
      - app
    networks:
      - laravel

  db:
    image: mysql:5.7
    ports: 
      - 3307:3306
    container_name: laravel_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - laravel

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - laravel

  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_artisan
    volumes:
      - ./laravel-horizon:/var/www/html
    networks:
      - laravel
    entrypoint: ["php", "/var/www/html/artisan"]

networks:
  laravel:

volumes:
  dbdata: